version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: assessment-mongodb-prod
    restart: unless-stopped
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: assessment_db
    volumes:
      - mongodb_data:/data/db
    networks:
      - assessment-network

  # MongoDB Express (Database Management UI)
  mongo-express:
    image: mongo-express:1.0.2
    container_name: assessment-mongo-express-prod
    restart: unless-stopped
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongodb
    networks:
      - assessment-network

  # Backend API - Using your Docker Hub image
  backend:
    image: gero253/assessment-mern:latest
    container_name: assessment-backend-prod
    restart: unless-stopped
    ports:
      - '4001:4001'
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/assessment_db?authSource=admin
      - PORT=4001
    depends_on:
      - mongodb
    networks:
      - assessment-network
    # Wait for MongoDB to be ready
    command: sh -c "sleep 10 && node src/index.js"

  # Frontend - Using your Docker Hub image
  frontend:
    image: gero253/assessment-frontend:latest
    container_name: assessment-frontend-prod
    restart: unless-stopped
    ports:
      - '3000:80' # nginx serves on port 80, mapped to 3000
    depends_on:
      - backend
    networks:
      - assessment-network

volumes:
  mongodb_data:

networks:
  assessment-network:
    driver: bridge
